<?php
/**
 * Created by PhpStorm.
 * User: KxF
 * Date: 01/09/2017
 * Time: 14:13
 */

namespace Tests\Request;


use Ikom\RequestBundle\Exceptions\ServiceNotAvailableException;
use Ikom\RequestBundle\Normalizer\JSONNormalizer;
use Ikom\RequestBundle\Request\IkomRequest;
use PHPUnit\Framework\TestCase;
use Symfony\Component\HttpFoundation\Request;
use Symfony\Component\HttpFoundation\RequestStack;

class IkomRequestTest extends TestCase
{
    /**
     * @var RequestStack
     */
    private $requestStack;

    protected function setUp()
    {
        parent::setUp(); // TODO: Change the autogenerated stub
        $request = new Request([], [], [], [], [], [],json_encode([
            'foo' => 'bar'
        ]));

        $requestStack = new RequestStack();
        $requestStack->push($request);
        $this->requestStack = $requestStack;
    }

    public function methodProvider() {
        return [
            ['delete', 'DELETE'],
            ['post', 'POST'],
            ['get', 'GET'],
            ['put', 'PUT']
        ];
    }

    /**
     * @dataProvider methodProvider
     * @param $methodName
     * @param $methodResult
     */
    public function testMethod($methodName, $methodResult)
    {
        $requester = new IkomRequest(new JSONNormalizer(), $this->requestStack);
        $result = $requester->{$methodName}('https://httpbin.org/anything')->getDecodedBodyContents();
        $this->assertEquals($result['method'], $methodResult);
    }

    public function statusCodeInfTo400Provider()
    {
        return [
            [200]
        ];
    }

    /**
     * @dataProvider statusCodeInfTo400Provider
     */
    public function testStatusCodeInfTo400ShouldBeGood($statusCode){
        $requester = new IkomRequest(new JSONNormalizer(), $this->requestStack);
        $requester->get("https://httpbin.org/status/$statusCode")->getDecodedBodyContents();
        $this->assertEquals($statusCode, $requester->getGuzzleRequest()->getStatusCode());
    }

    public function statusCodeSupTo400Provider()
    {
        return [
            [400],
            [500]
        ];
    }
    /**
     * @dataProvider statusCodeSupTo400Provider
     * @expectedException Ikom\RequestBundle\Exceptions\ServiceNotAvailableException
     */
    public function testStatusCodeSupTo400ShouldBeGood($statusCode){
        $requester = new IkomRequest(new JSONNormalizer(), $this->requestStack);
        $requester->get("https://httpbin.org/status/$statusCode")->getDecodedBodyContents();
        $this->assertEquals($statusCode, $requester->getGuzzleRequest()->getStatusCode());
    }
}